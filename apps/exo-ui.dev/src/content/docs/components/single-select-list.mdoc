---
title: Single Select List
description: Useful when only one active state is allowed at any given time.
---

The `SingleSelectList` component is arguably one of the most useful components in Exo UI.

The common use-case is adding an active state to a list of iterable data, think things like:

- Tabs
- Accordions

Below is a very basic example using a list of numbers and showing the active number as red.

{% editor dir="single-select-list" files=[{ file: "App.tsx" }] /%}

### Usage

Below is some basic usage advice for using `singleSelectList`.

#### Types

The `createSingleSelectList` function takes an optional generic to define the array type that the `SingleSelectList.Provider` provider will recieve in it's `items` prop.

```ts
interface Accordion {
	title: string;
	description: string;
}

const { SingleSelectList } = createSingleSelectList<Accordion[]>();
```

#### Options

The `SingleSelectList.Provider` accepts an `options` prop, below is a list of all of the available options:

| Key | Type |
| --- | --- |
| `onSelect` | `(item: T[number], index: number, resource: T) => void` where `T` the generic passed to `createSingleSelectList` |
| `initiallySelectedItemIndex` | `number` |

#### Provider

#### Values

#### Map

#### Hook

### Related examples

- [TODO](#)
