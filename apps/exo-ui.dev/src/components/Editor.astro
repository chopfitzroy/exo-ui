---
import fs from 'node:fs/promises';

import { Editor } from "./Editor.tsx";

const prefix = import.meta.env.MODE === 'development' ? '..' : '../../src';

const urls = Astro.props.files.map(item => new URL(`${prefix}/examples/${item.file}`, import.meta.url));
const requests = urls.map(url => fs.readFile(url, 'utf-8'));
const contents  = await Promise.all(requests);

// @TODO
// - This can be much cleaner...
const files = Astro.props.files.reduce((result, item, index) => ({
  ...result,
  [item.name]: contents[index],
}), {});
---

<!-- @TODO -->
<!-- Would like to use `client:load` directive here, but it doesn't work for production builds -->
<!-- This is occuring when the module CSS borks and it halts the pre-load script -->
<div class="not-content">
  <Editor client:load files={files} />
</div>
